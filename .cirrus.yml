compute_engine_instance:
  image_project: freebsd-org-cloud-dev
  image: family/freebsd-15-0-snap
  platform: freebsd
  cpu: 8
  memory: 16G
  disk: 80

  timeout_in: 120m
  environment:
    PKG_CONFIG_PATH: /usr/libdata/pkgconfig:/usr/local/libdata/pkgconfig
    IGNORE_OSVERSION: yes
  clone_script: |
    pkg update
    pkg install -yf git-tiny bison
    if [ -z "$CIRRUS_PR" ]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi
  setup_script:
  - uname -a
  - gpart show
  - df -m
  - pkg --version
  - pw useradd -n user -m
  - mkdir -p /usr/obj/$(pwd -P)
  - chown user:user /usr/obj/$(pwd -P)
  - su user -c "git config --global --add safe.directory $(pwd -P)"

  build_world_script:
  - su user -c "make -j$(sysctl -n hw.ncpu) ${EXTRA_MAKE_FLAGS} CROSS_TOOLCHAIN=${TOOLCHAIN} WITHOUT_TOOLCHAIN=yes buildworld"

  build_kernel_script:
  - su user -c "make -j$(sysctl -n hw.ncpu) CROSS_TOOLCHAIN=${TOOLCHAIN} WITHOUT_TOOLCHAIN=yes buildkernel"

  package_script:
  - su user -c "make CROSS_TOOLCHAIN=${TOOLCHAIN} WITHOUT_TOOLCHAIN=yes packages"

  package_check_script:
  - su user -c "/usr/libexec/flua tools/pkgbase/metalog_reader.lua -c /usr/obj/$(pwd -P)/${TARGET}.${TARGET_ARCH}/worldstage/METALOG"

  test_script:
  - sh .cirrus-ci/pkg-install.sh qemu-nox11
  - sh tools/boot/ci-qemu-test.sh

  make_sysent_script:
  # Check that make sysent results were committed if required
  - make sysent
  - if ! git diff --exit-code; then printf "\n>>> Generated sysent files not updated, run make sysent <<<\n"; false; fi

  include_ldirs_script:
  # Check that includes/Makefile refers to existing directories
  - if ! make -C include/ check-ldirs; then printf "\n>>> include/Makefile lists nonexistant directories <<<\n"; false; fi

  makeman_script:
  # Check that the committed src.conf.5 matches the one generated by
  # tools/build/options/makeman (modulo the date which always updates)
  # XXX: This script is slow so keep it last
  - (make makeman 2> /tmp/makeman.out); cat /tmp/makeman.out
  - if ! git diff --exit-code --ignore-matching-lines "^.Dd" share/man/man5/src.conf.5; then printf "\n>>> src.conf.5 was not updated as required <<<\n"; false; fi
  - if grep -q "no description found" /tmp/makeman.out; then printf "\n>>> Missing description files <<<\n"; false; fi

  post_script:
  - df -m
  - du -m -s /usr/obj

precommit_task:
  matrix:
    - name: amd64 smoke test using internal ci systems
      only_if: $CIRRUS_REPO_FULL_NAME != 'freebsd/freebsd-src' || $CIRRUS_BRANCH =~ 'pull/.*'
      env:
        TARGET: amd64
        TARGET_ARCH: amd64
    - name: aarch64 smoke test using internal ci systems
      only_if: $CIRRUS_REPO_FULL_NAME != 'freebsd/freebsd-src' || $CIRRUS_BRANCH =~ 'pull/.*'
      env:
        TARGET: arm64
        TARGET_ARCH: aarch64
  timeout_in: 120m

kernel_task:
  environment:
    PKG_CONFIG_PATH: /usr/libdata/pkgconfig:/usr/local/libdata/pkgconfig
    IGNORE_OSVERSION: yes
  clone_script: |
    pkg update
    pkg install -yf git-tiny
    if [ -z "$CIRRUS_PR" ]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi
  setup_script:
    - pkg install -fy python311 python3 py311-pip py311-setuptools
    - pip install --upgrade cloudsmith-cli
    - echo "PLATFORM=$(uname -m).$(uname -p)" >> ${CIRRUS_ENV}
    #- git clone https://github.com/ravynsoft/drm-kmod.git
  sys_cache:
    folder: /usr/obj/${CIRRUS_WORKING_DIR}/*/sys
    fingerprint_key: ${CIRRUS_BUILD_ID}_sys
    reupload_on_changes: true
  release_cache:
    folder: /usr/obj/${CIRRUS_WORKING_DIR}/*/release
    fingerprint_key: ${CIRRUS_BUILD_ID}_release
    reupload_on_changes: true
  kernel_build_script:
    - mkdir -p /usr/obj/${CIRRUS_WORKING_DIR}
    #- ${CIRRUS_WORKING_DIR}/tools/ravynOS/build.sh kernel drm kernelpkg
    - ${CIRRUS_WORKING_DIR}/tools/ravynOS/build.sh kernel kernelpkg
    - cloudsmith push raw -k $KEY ravynsoft/ravynOS --name kernel_${CIRRUS_BRANCH%/*}.txz /usr/obj/${CIRRUS_WORKING_DIR}/${PLATFORM}/release/kernel.txz
  upload_caches:
    - sys
    - release
  only_if: $CIRRUS_BRANCH == 'main' || $CIRRUS_BRANCH == 'staging'

  ci_script:
    - make -C tests/ci TARGET=${TARGET} TARGET_ARCH=${TARGET_ARCH} CIENV=cirrus CITYPE=smoke ci

  post_script:
    - df -m
    - du -m -s /usr/obj
